Let's get back to the code.
This is the script we just wrote to display a list of records from the database using plain PHP mixed
with HTML.
Let's split up this script so the code fits the MVC pattern.
We'll start by creating a model.
So let's create a new file called model dot php and we'll add the PHP opening tag.
This will be a class.
So let's add the class definition, calling the class model for now.
Note how I've capitalized the class name.
The PHP standard recommendations are industry standard recommendations for how to structure PHP code.
The basic coding standard recommends classes are named using studly caps like this, and that methods
are named using CamelCase.
Like this.
This is why the class name starts with a capital letter, as this is the model.
This deals with data.
So let's add a new public method called get data which will return an array.
Back in the index.php script, we'll take this code from the top that gets the data from the database
and paste it into the Getdata method.
At the end of the method.
Instead of assigning the data to a variable, we'll return it.
Then back in the index script so we can use this class.
First we need to require the file that it's in.
Then we can create an object of that class and call the get data method on that object, assigning its
return value to a variable.
Note that this variable is the same name as before, so it will be available inside the loop in the
HTML without having to change the code.
In the browser.
It works as before, nothing has changed.