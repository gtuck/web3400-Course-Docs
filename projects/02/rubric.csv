Criterion,Points,Description,Ratings
Model File - Class Structure,10,"Model class properly created with correct naming conventions","Excellent (10): Model class created with StudlyCaps naming and getData() method with camelCase and return type declaration|Good (8): Model class created with correct naming but missing return type declaration|Needs Improvement (5): Model class created but has naming convention issues|Poor (0): Model class not created or has major structural issues"
Model File - Database Operations,15,"Database connection and query implementation in getData() method","Excellent (15): Complete database connection code in getData(), proper PDO configuration with error mode and fetch mode, query retrieves all posts, returns fetchAll(PDO::FETCH_ASSOC)|Good (12): Database operations work but missing some PDO configuration options|Needs Improvement (8): Database connection present but query or return statement has issues|Poor (0): Database operations missing or non-functional"
View File - HTML Structure,10,"Complete HTML document with proper structure","Excellent (10): Complete HTML5 document structure with DOCTYPE, head, title, meta charset, and body|Good (8): HTML structure mostly complete with minor issues|Needs Improvement (5): HTML structure incomplete or missing key elements|Poor (0): View file not created or lacks basic HTML structure"
View File - Display Logic,15,"Proper use of foreach loop and output escaping","Excellent (15): foreach loop correctly displays posts, uses htmlspecialchars() for all output, uses $posts variable from controller|Good (12): Display logic works but missing htmlspecialchars() on some outputs|Needs Improvement (8): Display logic present but has issues with variable names or loop structure|Poor (0): Display logic missing or non-functional"
View File - Separation of Concerns,10,"View contains only presentation code","Excellent (10): View contains only HTML and display logic, no database code present|Good (8): View is mostly clean but has some minor logic that should be in controller|Needs Improvement (5): View has some database or business logic that should be elsewhere|Poor (0): View contains database connection code or significant business logic"
Controller File - Class Structure,10,"Controller class properly created with index() method","Excellent (10): Controller class with StudlyCaps naming, index() method with camelCase naming, proper structure|Good (8): Controller class created correctly but minor naming issues|Needs Improvement (5): Controller class has structural issues|Poor (0): Controller class not created or has major problems"
Controller File - MVC Flow,15,"Proper coordination between Model and View","Excellent (15): Requires model.php, creates Model instance, calls getData(), stores result in $posts, requires view.php in correct order|Good (12): MVC flow mostly correct but minor issues with variable names or order|Needs Improvement (8): MVC flow present but has significant issues|Poor (0): Controller does not properly coordinate Model and View"
Index File - Entry Point,10,"Simplified index.php as clean entry point","Excellent (10): index.php only requires controller.php, creates Controller instance, calls index() method - clean and simple (~5 lines)|Good (8): index.php works but has some unnecessary code|Needs Improvement (5): index.php works but contains database or HTML code|Poor (0): index.php not simplified or doesn't use Controller"
Functionality,10,"Application works and produces correct output","Excellent (10): Page displays all posts with titles and bodies, no errors, output identical to original script|Good (8): Page displays posts but has minor display issues|Needs Improvement (5): Page loads but missing data or has errors|Poor (0): Page doesn't load or has critical errors"
Code Quality,5,"Overall code quality and standards","Excellent (5): Proper indentation, clean formatting, no unused code, follows all PSR standards consistently|Good (4): Good code quality with minor formatting issues|Needs Improvement (2): Code works but has poor formatting or organization|Poor (0): Code is poorly formatted or has significant quality issues"